package com.moptra.go4wealth.bean;
// Generated 10 May, 2018 6:49:49 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * BankDetails generated by hbm2java
 */
@Entity
@Table(name = "bank_details", catalog = "go4wealthdb", uniqueConstraints = @UniqueConstraint(columnNames = "ACCOUNT_NO"))
public class BankDetails implements java.io.Serializable {

	private int userId;
	private User user;
	private String accountNo;
	private String ifsc;
	private String confirm;
	private String bankName;
	private String bankAddress;
	private String bankBranch;
	private String nomineeName;
	private String nomineeRelation;
	private String signatureImage;
	private Integer field1;
	private String field2;
	private String field3;
	private String accountType;
	private String micrCode;
	private Date startDate;
	private Date endDate;

	public BankDetails() {
	}

	public BankDetails(User user, String accountNo, String ifsc) {
		this.user = user;
		this.accountNo = accountNo;
		this.ifsc = ifsc;
	}

	public BankDetails(User user, String accountNo, String ifsc, String confirm, String bankName, String bankAddress,
			String bankBranch, String nomineeName, String nomineeRelation, String signatureImage, Integer field1,
			String field2, String field3, String accountType, String micrCode, Date startDate, Date endDate) {
		this.user = user;
		this.accountNo = accountNo;
		this.ifsc = ifsc;
		this.confirm = confirm;
		this.bankName = bankName;
		this.bankAddress = bankAddress;
		this.bankBranch = bankBranch;
		this.nomineeName = nomineeName;
		this.nomineeRelation = nomineeRelation;
		this.signatureImage = signatureImage;
		this.field1 = field1;
		this.field2 = field2;
		this.field3 = field3;
		this.accountType = accountType;
		this.startDate = startDate;
		this.endDate = endDate;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "user"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "USER_ID", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "ACCOUNT_NO", unique = true, nullable = false, length = 512)
	public String getAccountNo() {
		return this.accountNo;
	}

	public void setAccountNo(String accountNo) {
		this.accountNo = accountNo;
	}

	@Column(name = "IFSC", nullable = false, length = 50)
	public String getIfsc() {
		return this.ifsc;
	}

	public void setIfsc(String ifsc) {
		this.ifsc = ifsc;
	}

	@Column(name = "CONFIRM", length = 20)
	public String getConfirm() {
		return this.confirm;
	}

	public void setConfirm(String confirm) {
		this.confirm = confirm;
	}

	@Column(name = "BANK_NAME", length = 100)
	public String getBankName() {
		return this.bankName;
	}

	public void setBankName(String bankName) {
		this.bankName = bankName;
	}

	@Column(name = "BANK_ADDRESS", length = 256)
	public String getBankAddress() {
		return this.bankAddress;
	}

	public void setBankAddress(String bankAddress) {
		this.bankAddress = bankAddress;
	}

	@Column(name = "BANK_BRANCH", length = 100)
	public String getBankBranch() {
		return this.bankBranch;
	}

	public void setBankBranch(String bankBranch) {
		this.bankBranch = bankBranch;
	}

	@Column(name = "NOMINEE_NAME", length = 50)
	public String getNomineeName() {
		return this.nomineeName;
	}

	public void setNomineeName(String nomineeName) {
		this.nomineeName = nomineeName;
	}

	@Column(name = "NOMINEE_RELATION", length = 50)
	public String getNomineeRelation() {
		return this.nomineeRelation;
	}

	public void setNomineeRelation(String nomineeRelation) {
		this.nomineeRelation = nomineeRelation;
	}

	@Column(name = "SIGNATURE_IMAGE", length = 256)
	public String getSignatureImage() {
		return this.signatureImage;
	}

	public void setSignatureImage(String signatureImage) {
		this.signatureImage = signatureImage;
	}

	@Column(name = "FIELD1")
	public Integer getField1() {
		return this.field1;
	}

	public void setField1(Integer field1) {
		this.field1 = field1;
	}

	@Column(name = "FIELD2", length = 128)
	public String getField2() {
		return this.field2;
	}

	public void setField2(String field2) {
		this.field2 = field2;
	}

	@Column(name = "FIELD3", length = 256)
	public String getField3() {
		return this.field3;
	}

	public void setField3(String field3) {
		this.field3 = field3;
	}
	
	@Column(name = "ACCOUNT_TYPE", length = 10)
	public String getAccountType() {
		return accountType;
	}

	public void setAccountType(String accountType) {
		this.accountType = accountType;
	}

	@Column(name = "MICR_CODE", length = 100)
	public String getMicrCode() {
		return micrCode;
	}

	public void setMicrCode(String micrCode) {
		this.micrCode = micrCode;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@CreationTimestamp
	@Column(name = "START_DATE", length = 19)
	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@CreationTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "END_DATE", length = 19)
	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}
	
	

}
