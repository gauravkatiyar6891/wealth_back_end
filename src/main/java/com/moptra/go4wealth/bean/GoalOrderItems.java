package com.moptra.go4wealth.bean;
// Generated 14 Aug, 2018 1:19:07 PM by Hibernate Tools 5.1.0.Alpha1

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.CreationTimestamp;
import org.springframework.data.annotation.CreatedDate;

/**
 * GoalOrderItems generated by hbm2java
 */
@Entity
@Table(name = "goal_order_items", catalog = "go4wealthdb")
public class GoalOrderItems implements java.io.Serializable {

	private Integer goalOrderItemId;
	private Goals goals;
	private GoalsOrder goalsOrder;
	private User user;
	private String description;
	private BigDecimal futureValue;
	private Integer duration;
	private Date goalDate;
	private BigDecimal monthlySaving;
	private BigDecimal lumpsumSaving;
	private Date createdTimestamp;
	private Date updatedDateTime;
	private Integer field1;
	private String field2;
	private String field4;
	private BigDecimal currentCost;

	public GoalOrderItems() {
	}

	public GoalOrderItems(Goals goals, GoalsOrder goalsOrder, User user, BigDecimal futureValue, Date goalDate,
			BigDecimal monthlySaving, BigDecimal lumpsumSaving, Date createdTimestamp, Date updatedDateTime) {
		this.goals = goals;
		this.goalsOrder = goalsOrder;
		this.user = user;
		this.futureValue = futureValue;
		this.goalDate = goalDate;
		this.monthlySaving = monthlySaving;
		this.lumpsumSaving = lumpsumSaving;
		this.createdTimestamp = createdTimestamp;
		this.updatedDateTime = updatedDateTime;
	}

	public GoalOrderItems(Goals goals, GoalsOrder goalsOrder, User user, String description, BigDecimal futureValue,
			Integer duration, Date goalDate, BigDecimal monthlySaving, BigDecimal lumpsumSaving, Date createdTimestamp,
			Date updatedDateTime, Integer field1, String field2, String field4,BigDecimal currentCost) {
		this.goals = goals;
		this.goalsOrder = goalsOrder;
		this.user = user;
		this.description = description;
		this.futureValue = futureValue;
		this.duration = duration;
		this.goalDate = goalDate;
		this.monthlySaving = monthlySaving;
		this.lumpsumSaving = lumpsumSaving;
		this.createdTimestamp = createdTimestamp;
		this.updatedDateTime = updatedDateTime;
		this.field1 = field1;
		this.field2 = field2;
		this.field4 = field4;
		this.currentCost = currentCost;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "GOAL_ORDER_ITEM_ID", unique = true, nullable = false)
	public Integer getGoalOrderItemId() {
		return this.goalOrderItemId;
	}

	public void setGoalOrderItemId(Integer goalOrderItemId) {
		this.goalOrderItemId = goalOrderItemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GOAL_ID", nullable = false)
	public Goals getGoals() {
		return this.goals;
	}

	public void setGoals(Goals goals) {
		this.goals = goals;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "GOALS_ORDER_ID", nullable = false)
	public GoalsOrder getGoalsOrder() {
		return this.goalsOrder;
	}

	public void setGoalsOrder(GoalsOrder goalsOrder) {
		this.goalsOrder = goalsOrder;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_ID", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "DESCRIPTION", length = 254)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "FUTURE_VALUE", nullable = false, precision = 20, scale = 5)
	public BigDecimal getFutureValue() {
		return this.futureValue;
	}

	public void setFutureValue(BigDecimal futureValue) {
		this.futureValue = futureValue;
	}

	@Column(name = "DURATION")
	public Integer getDuration() {
		return this.duration;
	}

	public void setDuration(Integer duration) {
		this.duration = duration;
	}

	@CreationTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "GOAL_DATE", nullable = false, length = 19)
	public Date getGoalDate() {
		return this.goalDate;
	}

	public void setGoalDate(Date goalDate) {
		this.goalDate = goalDate;
	}

	@Column(name = "MONTHLY_SAVING", nullable = false, precision = 20, scale = 5)
	public BigDecimal getMonthlySaving() {
		return this.monthlySaving;
	}

	public void setMonthlySaving(BigDecimal monthlySaving) {
		this.monthlySaving = monthlySaving;
	}

	@Column(name = "LUMPSUM_SAVING", nullable = false, precision = 20, scale = 5)
	public BigDecimal getLumpsumSaving() {
		return this.lumpsumSaving;
	}

	public void setLumpsumSaving(BigDecimal lumpsumSaving) {
		this.lumpsumSaving = lumpsumSaving;
	}

	@CreationTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TIMESTAMP", nullable = false, length = 19)
	public Date getCreatedTimestamp() {
		return this.createdTimestamp;
	}

	public void setCreatedTimestamp(Date createdTimestamp) {
		this.createdTimestamp = createdTimestamp;
	}

	@CreationTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE_TIME", nullable = false, length = 19)
	public Date getUpdatedDateTime() {
		return this.updatedDateTime;
	}

	public void setUpdatedDateTime(Date updatedDateTime) {
		this.updatedDateTime = updatedDateTime;
	}

	@Column(name = "FIELD1")
	public Integer getField1() {
		return this.field1;
	}

	public void setField1(Integer field1) {
		this.field1 = field1;
	}

	@Column(name = "FIELD2", length = 128)
	public String getField2() {
		return this.field2;
	}

	public void setField2(String field2) {
		this.field2 = field2;
	}

	@Column(name = "FIELD4", length = 128)
	public String getField4() {
		return this.field4;
	}

	public void setField4(String field4) {
		this.field4 = field4;
	}

	@Column(name = "CURRENT_COST", nullable = false, precision = 20, scale = 5)
	public BigDecimal getCurrentCost() {
		return currentCost;
	}

	public void setCurrentCost(BigDecimal currentCost) {
		this.currentCost = currentCost;
	}

}
