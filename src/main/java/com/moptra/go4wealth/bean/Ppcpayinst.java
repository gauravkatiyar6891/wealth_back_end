package com.moptra.go4wealth.bean;
// Generated 4 Aug, 2018 3:40:15 PM by Hibernate Tools 5.1.0.Alpha1

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.CreationTimestamp;

/**
 * Ppcpayinst generated by hbm2java
 */
@Entity
@Table(name = "ppcpayinst", catalog = "go4wealthdb")
public class Ppcpayinst implements java.io.Serializable {

	private Long transactionId;
	private Orders orders;
	private BigDecimal amount;
	private BigDecimal approvingamount;
	private BigDecimal approvedamount;
	private BigDecimal creditingamount;
	private BigDecimal creditedamount;
	private Date timecreated;
	private Date timeupdated;
	private String currency;
	private String state;
	private int markfordelete;
	private String field1;
	private String field2;
	private Integer field3;
	private Ppcpaytran ppcpaytran;
	private String accountNo;

	public Ppcpayinst() {
	}

	
	
	public Ppcpayinst(Orders orders, BigDecimal amount, BigDecimal approvingamount, BigDecimal approvedamount,
			BigDecimal creditingamount, BigDecimal creditedamount, Date timecreated, Date timeupdated, String currency,
			String state, int markfordelete,String accountNo) {
		this.orders = orders;
		this.amount = amount;
		this.approvingamount = approvingamount;
		this.approvedamount = approvedamount;
		this.creditingamount = creditingamount;
		this.creditedamount = creditedamount;
		this.timecreated = timecreated;
		this.timeupdated = timeupdated;
		this.currency = currency;
		this.state = state;
		this.markfordelete = markfordelete;
		this.accountNo=accountNo;
	}

	public Ppcpayinst(Orders orders, BigDecimal amount, BigDecimal approvingamount, BigDecimal approvedamount,
			BigDecimal creditingamount, BigDecimal creditedamount, Date timecreated, Date timeupdated, String currency,
			String state, int markfordelete, String field1, String field2, Integer field3,String accountNo, Ppcpaytran ppcpaytran) {
		this.orders = orders;
		this.amount = amount;
		this.approvingamount = approvingamount;
		this.approvedamount = approvedamount;
		this.creditingamount = creditingamount;
		this.creditedamount = creditedamount;
		this.timecreated = timecreated;
		this.timeupdated = timeupdated;
		this.currency = currency;
		this.state = state;
		this.markfordelete = markfordelete;
		this.field1 = field1;
		this.field2 = field2;
		this.field3 = field3;
		this.accountNo=accountNo;
		this.ppcpaytran = ppcpaytran;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "TRANSACTION_ID", unique = true, nullable = false)
	public Long getTransactionId() {
		return this.transactionId;
	}

	public void setTransactionId(Long transactionId) {
		this.transactionId = transactionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORDERS_ID", nullable = false)
	public Orders getOrders() {
		return this.orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}
	
	@Column(name = "ACCOUNT_NUMBER", nullable = false,length = 126)
	public String getAccountNo() {
		return accountNo;
	}

	public void setAccountNo(String accountNo) {
		this.accountNo = accountNo;
	}
	
	@Column(name = "AMOUNT", nullable = false, precision = 20, scale = 5)
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "APPROVINGAMOUNT", nullable = false, precision = 20, scale = 5)
	public BigDecimal getApprovingamount() {
		return this.approvingamount;
	}

	public void setApprovingamount(BigDecimal approvingamount) {
		this.approvingamount = approvingamount;
	}

	@Column(name = "APPROVEDAMOUNT", nullable = false, precision = 20, scale = 5)
	public BigDecimal getApprovedamount() {
		return this.approvedamount;
	}

	public void setApprovedamount(BigDecimal approvedamount) {
		this.approvedamount = approvedamount;
	}

	@Column(name = "CREDITINGAMOUNT", nullable = false, precision = 20, scale = 5)
	public BigDecimal getCreditingamount() {
		return this.creditingamount;
	}

	public void setCreditingamount(BigDecimal creditingamount) {
		this.creditingamount = creditingamount;
	}

	@Column(name = "CREDITEDAMOUNT", nullable = false, precision = 20, scale = 5)
	public BigDecimal getCreditedamount() {
		return this.creditedamount;
	}

	public void setCreditedamount(BigDecimal creditedamount) {
		this.creditedamount = creditedamount;
	}

	@CreationTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIMECREATED", nullable = false, length = 19)
	public Date getTimecreated() {
		return this.timecreated;
	}

	public void setTimecreated(Date timecreated) {
		this.timecreated = timecreated;
	}

	@CreationTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIMEUPDATED", nullable = false, length = 19)
	public Date getTimeupdated() {
		return this.timeupdated;
	}

	public void setTimeupdated(Date timeupdated) {
		this.timeupdated = timeupdated;
	}

	@Column(name = "CURRENCY", nullable = false, length = 50)
	public String getCurrency() {
		return this.currency;
	}

	public void setCurrency(String currency) {
		this.currency = currency;
	}

	@Column(name = "STATE", nullable = false, length = 6)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "MARKFORDELETE", nullable = false)
	public int getMarkfordelete() {
		return this.markfordelete;
	}

	public void setMarkfordelete(int markfordelete) {
		this.markfordelete = markfordelete;
	}

	@Column(name = "FIELD1", length = 128)
	public String getField1() {
		return this.field1;
	}

	public void setField1(String field1) {
		this.field1 = field1;
	}

	@Column(name = "FIELD2", length = 254)
	public String getField2() {
		return this.field2;
	}

	public void setField2(String field2) {
		this.field2 = field2;
	}

	@Column(name = "FIELD3")
	public Integer getField3() {
		return this.field3;
	}

	public void setField3(Integer field3) {
		this.field3 = field3;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "ppcpayinst")
	public Ppcpaytran getPpcpaytran() {
		return this.ppcpaytran;
	}

	public void setPpcpaytran(Ppcpaytran ppcpaytran) {
		this.ppcpaytran = ppcpaytran;
	}

}
