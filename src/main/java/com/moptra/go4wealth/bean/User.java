package com.moptra.go4wealth.bean;
// Generated May 14, 2018 1:41:21 PM by Hibernate Tools 5.1.0.Alpha1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "go4wealthdb", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class User implements java.io.Serializable {

	private Integer userId;
	private String username;
	private String password;
	private String mobileNumber;
	private String registerType;
	private String email;
	private String firstName;
	private String lastName;
	private String gender;
	private Integer emailVerified;
	private Integer mobileVerified;
	private Date dateOfBirth;
	private Date createdTimestamp;
	private Date updatedDateTime;
	private Integer field1;
	private String field2;
	private String field3;
	private String field4;
	private String status;
	private Set<GoalOrderItems> goalOrderItemses = new HashSet<GoalOrderItems>(0);
	//private UserProfile userProfile;
	private Set<Orders> orderses = new HashSet<Orders>(0);
	private Set<UserRole> userRoles = new HashSet<UserRole>(0);
	private BankDetails bankDetails;
	private PanDetails panDetails;
	private Set<Commission> commissions = new HashSet<Commission>(0);
	private Set<GoalsOrder> goalsOrders = new HashSet<GoalsOrder>(0);
	private Set<UserAuthority> userAuthorities = new HashSet<UserAuthority>(0);
	private Set<AddressProof> addressProofs = new HashSet<AddressProof>(0);
	private AgentProfile agentProfile;
	private KycDetails kycDetails;
	private OnboardingStatus onboardingStatus;
	//private Set<Address> addresses = new HashSet<Address>(0);
	private Set<UserWatchlist> userWatchlists = new HashSet<UserWatchlist>(0);

	public User() {
	}

	public User(String username, String password, String registerType, Date createdTimestamp, Date updatedDateTime) {
		this.username = username;
		this.password = password;
		this.registerType = registerType;
		this.createdTimestamp = createdTimestamp;
		this.updatedDateTime = updatedDateTime;
	}

	public User(String username, String password, String mobileNumber, String registerType, String email,
			String firstName, String lastName, String gender, Date dateOfBirth, Date createdTimestamp,
			Date updatedDateTime, Integer field1, String field2, String field3, String field4, String status,
			int emailVerified, int mobileVerified,/* UserProfile userProfile,*/ BankDetails bankDetails,
			Set<Orders> orderses, Set<AddressProof> addressProofs, PanDetails panDetails,
			Set<Commission> commissions, AgentProfile agentProfile, KycDetails kycDetails, Set<GoalOrderItems> goalOrderItemses,
			Set<GoalsOrder> goalsOrders,
			OnboardingStatus onboardingStatus,/*Set<Address> addresses,*/Set<UserWatchlist> userWatchlists) {
		this.username = username;
		this.password = password;
		this.mobileNumber = mobileNumber;
		this.registerType = registerType;
		this.email = email;
		this.firstName = firstName;
		this.lastName = lastName;
		this.gender = gender;
		this.dateOfBirth = dateOfBirth;
		this.createdTimestamp = createdTimestamp;
		this.updatedDateTime = updatedDateTime;
		this.field1 = field1;
		this.field2 = field2;
		this.field3 = field3;
		this.field4 = field4;
		this.status = status;
		this.emailVerified = emailVerified;
		this.mobileVerified = mobileVerified;
		this.goalOrderItemses = goalOrderItemses;
		//this.userProfile = userProfile;
		this.bankDetails = bankDetails;
		this.orderses = orderses;
		this.addressProofs = addressProofs;		
		this.panDetails = panDetails;
		this.commissions = commissions;		
		this.goalsOrders = goalsOrders;
		this.agentProfile = agentProfile;
		this.kycDetails = kycDetails;
		this.onboardingStatus = onboardingStatus;
		//this.addresses = addresses;
		this.userWatchlists = userWatchlists;
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "USER_ID", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "username", unique = true, nullable = false, length = 126)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "PASSWORD", nullable = false, length = 126)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "MOBILE_NUMBER", length = 50)
	public String getMobileNumber() {
		return this.mobileNumber;
	}

	public void setMobileNumber(String mobileNumber) {
		this.mobileNumber = mobileNumber;
	}

	@Column(name = "REGISTER_TYPE", nullable = false, length = 126)
	public String getRegisterType() {
		return this.registerType;
	}

	public void setRegisterType(String registerType) {
		this.registerType = registerType;
	}

	@Column(name = "EMAIL", length = 126)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "FIRST_NAME", length = 126)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", length = 126)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "GENDER", length = 50)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_OF_BIRTH", length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}
	
	
	@Column(name="STATUS", length = 10)
	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
	
	@Column(name="EMAIL_VERIFIED",nullable = false)
	public Integer getEmailVerified() {
		return emailVerified;
	}

	public void setEmailVerified(Integer emailVerified) {
		this.emailVerified = emailVerified;
	}
	
	@Column(name="MOBILE_VERIFIED")
	public Integer getMobileVerified() {
		return mobileVerified;
	}

	public void setMobileVerified(Integer mobileVerified) {
		this.mobileVerified = mobileVerified;
	}

	@CreationTimestamp
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_TIMESTAMP", nullable = false, length = 19)
	public Date getCreatedTimestamp() {
		return this.createdTimestamp;
	}

	public void setCreatedTimestamp(Date createdTimestamp) {
		this.createdTimestamp = createdTimestamp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@UpdateTimestamp
	@Column(name = "UPDATED_DATE_TIME",nullable = false, length = 19)
	public Date getUpdatedDateTime() {
		return this.updatedDateTime;
	}

	public void setUpdatedDateTime(Date updatedDateTime) {
		this.updatedDateTime = updatedDateTime;
	}

	@Column(name = "FIELD1")
	public Integer getField1() {
		return this.field1;
	}

	public void setField1(Integer field1) {
		this.field1 = field1;
	}

	@Column(name = "FIELD2", length = 128)
	public String getField2() {
		return this.field2;
	}

	public void setField2(String field2) {
		this.field2 = field2;
	}

	@Column(name = "FIELD3", length = 512)
	public String getField3() {
		return this.field3;
	}

	public void setField3(String field3) {
		this.field3 = field3;
	}

	@Column(name = "FIELD4", length = 128)
	public String getField4() {
		return this.field4;
	}

	public void setField4(String field4) {
		this.field4 = field4;
	}

	/*@OneToOne(fetch = FetchType.EAGER, mappedBy = "user", cascade = CascadeType.ALL)
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}
*/
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user", cascade = CascadeType.ALL)
	public Set<UserRole> getUserRoles() {
		return this.userRoles;
	}

	public void setUserRoles(Set<UserRole> userRoles) {
		this.userRoles = userRoles;
	}
	
	@OneToOne(fetch = FetchType.EAGER, mappedBy = "user", cascade = CascadeType.ALL)
	public BankDetails getBankDetails() {
		return this.bankDetails;
	}

	public void setBankDetails(BankDetails bankDetails) {
		this.bankDetails = bankDetails;
	}
	
	@OneToOne(fetch = FetchType.EAGER, mappedBy = "user", cascade = CascadeType.ALL)
	public PanDetails getPanDetails() {
		return this.panDetails;
	}

	public void setPanDetails(PanDetails panDetails) {
		this.panDetails = panDetails;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user", cascade = CascadeType.ALL)
	public Set<Commission> getCommissions() {
		return this.commissions;
	}

	public void setCommissions(Set<Commission> commissions) {
		this.commissions = commissions;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user", cascade = CascadeType.ALL)
	public Set<UserAuthority> getUserAuthorities() {
		return this.userAuthorities;
	}

	public void setUserAuthorities(Set<UserAuthority> userAuthorities) {
		this.userAuthorities = userAuthorities;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user", cascade = CascadeType.ALL)
	public Set<AddressProof> getAddressProofs() {
		return this.addressProofs;
	}

	public void setAddressProofs(Set<AddressProof> addressProofs) {
		this.addressProofs = addressProofs;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "user", cascade = CascadeType.ALL)
	public AgentProfile getAgentProfile() {
		return this.agentProfile;
	}

	public void setAgentProfile(AgentProfile agentProfile) {
		this.agentProfile = agentProfile;
	}
	
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "user", cascade = CascadeType.ALL)
	public KycDetails getKycDetails() {
		return this.kycDetails;
	}

	public void setKycDetails(KycDetails kycDetails) {
		this.kycDetails = kycDetails;
	}
	
	@OneToOne(fetch = FetchType.EAGER, mappedBy = "user", cascade = CascadeType.ALL)
	public OnboardingStatus getOnboardingStatus() {
		return this.onboardingStatus;
	}

	public void setOnboardingStatus(OnboardingStatus onboardingStatus) {
		this.onboardingStatus = onboardingStatus;
	}
	
	/*@OneToMany(fetch = FetchType.EAGER, mappedBy = "user", cascade = CascadeType.ALL)
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}*/
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	public Set<UserWatchlist> getUserWatchlists() {
		return this.userWatchlists;
	}

	public void setUserWatchlists(Set<UserWatchlist> userWatchlists) {
		this.userWatchlists = userWatchlists;
	}
	
		@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	public Set<GoalOrderItems> getGoalOrderItemses() {
		return this.goalOrderItemses;
	}

	public void setGoalOrderItemses(Set<GoalOrderItems> goalOrderItemses) {
		this.goalOrderItemses = goalOrderItemses;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	public Set<GoalsOrder> getGoalsOrders() {
		return this.goalsOrders;
	}

	public void setGoalsOrders(Set<GoalsOrder> goalsOrders) {
		this.goalsOrders = goalsOrders;
	}

}